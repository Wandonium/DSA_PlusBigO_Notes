Problem: Given a string made up of the following brackets: ()[]{},
determine whether the brackets properly match. e.g:
    - [{}] => valid
    - (()()) => valid
    - {] => invalid
    - [()]))() => invalid
    - []{}({}) = valid

My Solution: 
    public class BracketsProblem {
        public static void main(String[] args) {
            String input = "";
            boolean valid = false;
            HashMap<String> brackets = new HashMap<>();
            brackets.put("(", ")");
            brackets.put("[", "]");
            brackets.put("{", "}");
            for(int i=0;i<input.length();i++) {
                for(int j=i;j<input.length();j++) {
                    if(input[j].equals(brackets.get(input[i]))) {
                        valid = true;
                    }
                }
                if(!valid) break;
            }
            
        }
    }

Solution pseudocode:
    Let S be a stack
    For bracket in bracket_string:
        rev = getReversedBracket(bracket)

        If isLeftBracket(bracket):
            S.push(bracket)
        Else If S.isEmpty() or S.pop() != rev:
            return false // Invalid
    return S.isEmpty() // Valid if S is empty

Solution in code: check ./Solution.java file